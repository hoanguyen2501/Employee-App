// <auto-generated />
using System;
using EmployeeApp.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EmployeeApp.Api.Data.Migrations
{
    [DbContext(typeof(EmployeeAppDbContext))]
    [Migration("20230802050417_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("EmployeeApp.Api.Entities.AppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("longblob");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("longblob");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Username")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("AppUser", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("391a641b-16b9-4008-b56f-d315ab66ca28"),
                            CreatedAt = new DateTime(2023, 8, 2, 5, 4, 17, 259, DateTimeKind.Utc).AddTicks(5804),
                            PasswordHash = new byte[] { 22, 132, 162, 245, 219, 243, 238, 185, 62, 203, 157, 81, 195, 160, 138, 213, 135, 79, 78, 42, 204, 167, 242, 121, 114, 2, 124, 119, 243, 213, 155, 146, 118, 127, 133, 31, 93, 33, 39, 166, 233, 126, 227, 210, 39, 126, 18, 77, 57, 198, 30, 211, 68, 201, 200, 19, 30, 199, 34, 51, 103, 157, 135, 156 },
                            PasswordSalt = new byte[] { 199, 199, 185, 241, 228, 66, 64, 28, 157, 154, 52, 10, 142, 1, 32, 2, 102, 64, 80, 23, 14, 196, 52, 71, 92, 102, 5, 110, 215, 129, 30, 229, 138, 63, 120, 57, 237, 14, 94, 17, 30, 141, 83, 60, 162, 87, 172, 113, 190, 143, 44, 121, 48, 161, 187, 92, 62, 180, 236, 100, 77, 81, 131, 245, 156, 16, 43, 185, 26, 240, 146, 250, 146, 5, 176, 172, 185, 192, 6, 167, 62, 249, 75, 219, 182, 118, 153, 64, 154, 206, 1, 131, 227, 72, 140, 16, 99, 121, 183, 121, 0, 77, 193, 182, 161, 207, 58, 195, 25, 14, 124, 102, 84, 57, 103, 162, 29, 9, 38, 186, 60, 53, 199, 129, 253, 218, 3, 61 },
                            UpdatedAt = new DateTime(2023, 8, 2, 5, 4, 17, 259, DateTimeKind.Utc).AddTicks(5806),
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("EmployeeApp.Api.Entities.Company", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Address")
                        .HasColumnType("longtext");

                    b.Property<string>("City")
                        .HasColumnType("longtext");

                    b.Property<string>("Country")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("EstablishedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("PhoneNumber")
                        .IsUnique();

                    b.ToTable("Company", (string)null);
                });

            modelBuilder.Entity("EmployeeApp.Api.Entities.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Address")
                        .HasColumnType("longtext");

                    b.Property<string>("City")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("CompanyId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Country")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("FirstName")
                        .HasColumnType("longtext");

                    b.Property<bool>("Gender")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("HiredAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("PhoneNumber")
                        .IsUnique();

                    b.ToTable("Employee", (string)null);
                });

            modelBuilder.Entity("EmployeeApp.Api.Entities.Employee", b =>
                {
                    b.HasOne("EmployeeApp.Api.Entities.Company", "Company")
                        .WithMany("Employees")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Company");
                });

            modelBuilder.Entity("EmployeeApp.Api.Entities.Company", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
