// <auto-generated />
using System;
using EmployeeApp.DAL.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EmployeeApp.DAL.DataAccess.Migrations
{
    [DbContext(typeof(EmployeeAppDbContext))]
    [Migration("20230811061924_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("EmployeeApp.Domain.Entities.AppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("longblob");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("longblob");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Username")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("AppUser", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("f5ef4239-676e-4cda-a370-c794fb5aea0e"),
                            CreatedAt = new DateTime(2023, 8, 11, 6, 19, 24, 404, DateTimeKind.Utc).AddTicks(9322),
                            PasswordHash = new byte[] { 245, 1, 83, 158, 90, 70, 47, 143, 215, 255, 85, 95, 1, 83, 25, 214, 170, 160, 213, 99, 131, 72, 184, 250, 249, 185, 236, 220, 91, 255, 154, 247, 17, 162, 97, 130, 25, 181, 208, 59, 35, 47, 5, 8, 120, 254, 231, 16, 30, 128, 58, 204, 68, 3, 165, 185, 120, 44, 2, 74, 214, 54, 62, 119 },
                            PasswordSalt = new byte[] { 140, 129, 209, 108, 109, 33, 20, 141, 156, 55, 252, 80, 254, 196, 156, 147, 3, 178, 158, 210, 192, 117, 102, 22, 235, 12, 18, 229, 56, 107, 190, 15, 188, 241, 71, 159, 236, 201, 92, 252, 125, 251, 146, 152, 101, 162, 15, 163, 138, 117, 41, 61, 80, 187, 251, 10, 242, 18, 142, 130, 158, 61, 13, 55, 92, 56, 187, 178, 48, 159, 183, 60, 2, 19, 36, 157, 107, 1, 151, 8, 245, 246, 223, 10, 215, 196, 222, 189, 170, 60, 11, 106, 109, 127, 51, 44, 154, 154, 208, 235, 154, 222, 31, 87, 201, 104, 24, 114, 112, 159, 23, 10, 69, 160, 39, 176, 134, 78, 128, 67, 227, 244, 97, 44, 29, 172, 56, 219 },
                            UpdatedAt = new DateTime(2023, 8, 11, 6, 19, 24, 404, DateTimeKind.Utc).AddTicks(9324),
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("EmployeeApp.Domain.Entities.Company", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Address")
                        .HasColumnType("longtext");

                    b.Property<string>("City")
                        .HasColumnType("longtext");

                    b.Property<string>("CompanyName")
                        .HasColumnType("longtext");

                    b.Property<string>("Country")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("EstablishedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("PhoneNumber")
                        .IsUnique();

                    b.ToTable("Company", (string)null);
                });

            modelBuilder.Entity("EmployeeApp.Domain.Entities.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Address")
                        .HasColumnType("longtext");

                    b.Property<string>("City")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("CompanyId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Country")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("FirstName")
                        .HasColumnType("longtext");

                    b.Property<bool>("Gender")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("HiredAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("PhoneNumber")
                        .IsUnique();

                    b.ToTable("Employee", (string)null);
                });

            modelBuilder.Entity("EmployeeApp.Domain.Entities.Employee", b =>
                {
                    b.HasOne("EmployeeApp.Domain.Entities.Company", "Company")
                        .WithMany("Employees")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Company");
                });

            modelBuilder.Entity("EmployeeApp.Domain.Entities.Company", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
